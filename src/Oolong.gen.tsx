/* TypeScript file generated by genType. */

const $$toRE443305185 = {"Pop": 0};

const $$toJS443305185 = {"0": "Pop"};

// tslint:disable-next-line:no-var-requires
const CreateBucklescriptBlock = require('bs-platform/lib/js/block.js');

// tslint:disable-next-line:no-var-requires
const Curry = require('bs-platform/lib/js/curry.js');

// tslint:disable-next-line:no-var-requires
const OolongBS = require('./Oolong.bs');

// tslint:disable-next-line:no-var-requires
const ReasonReact = require('reason-react/src/ReasonReact.js');

import {RouterAction_t as Oolong_Internals_RouterAction_t} from './Oolong_Internals.gen';

import {Router_t as Oolong_Internals_Router_t} from './Oolong_Internals.gen';

import {list} from '../src/shims/ReasonPervasives.shim';

import {reactElement as ReasonReact_reactElement} from './ReasonReact.gen';

// tslint:disable-next-line:interface-over-type-literal
export type self<action,state> = {
  readonly state: state; 
  readonly send: (_1:action) => void; 
  readonly handle: unknown
};

// tslint:disable-next-line:interface-over-type-literal
export type sideEffect<action,state> = (_1:self<action,state>) => void;

// tslint:disable-next-line:max-classes-per-file 
// tslint:disable-next-line:class-name
export abstract class routeState<action,state> { protected opaque!: action | state }; /* simulate opaque types */

// tslint:disable-next-line:interface-over-type-literal
export type routerUpdate<action,state> = 
  | "Pop"
  | { tag: "Push"; value: state }
  | { tag: "PushWithSideEffects"; value: [state, sideEffect<action,state>] }
  | { tag: "Replace"; value: state }
  | { tag: "ReplaceWithSideEffects"; value: [state, sideEffect<action,state>] }
  | { tag: "PopWithSideEffects"; value: sideEffect<action,state> };

// tslint:disable-next-line:interface-over-type-literal
export type RouterProgram_t<action,state,view> = {
  readonly debugName: string; 
  readonly serializeState: (_1:state) => string; 
  readonly init: (_1:list<string>, _2:string, _3:string) => routeState<action,state>; 
  readonly fromRoute: (_1:Oolong_Internals_RouterAction_t, _2:state) => routeState<action,state>; 
  readonly toRoute: (_1:action, _2:state) => routerUpdate<action,state>; 
  readonly render: (_1:self<action,state>) => view; 
  readonly subscriptions: (_1:state) => list<sideEffect<action,state>>
};

export const state: <action,state>(_1:state) => routeState<action,state> = OolongBS.state;

export const stateWithSideEffects: <action,state>(_1:state, _2:sideEffect<action,state>) => routeState<action,state> = function <action,state>(Arg1: any, Arg2: any) {
  const result = Curry._2(OolongBS.stateWithSideEffects, Arg1, function (Arg11: any) {
      const result1 = Arg2({state:Arg11[0], send:Arg11[1], handle:Arg11[2]});
      return result1
    });
  return result
};

// tslint:disable-next-line:interface-over-type-literal
export type ReactProgram_Props = {
  readonly program: (_1:void) => RouterProgram_t<unknown,unknown,ReasonReact_reactElement>; 
  readonly router?: Router_t; 
  readonly children?: void[]
};

export const ReactProgram: React.ComponentClass<ReactProgram_Props> = ReasonReact.wrapReasonForJs(
  OolongBS.ReactProgram[0],
  (function _(jsProps: ReactProgram_Props) {
     return Curry._3(OolongBS.ReactProgram[1], function (Arg1: any) {
  const result = jsProps.program(Arg1);
  return [result.debugName, result.serializeState, result.init, result.fromRoute, function (Arg11: any, Arg2: any) {
      const result1 = result.toRoute(Arg11, Arg2);
      return typeof(result1) === 'object'
        ? result1.tag==="Push"
          ? CreateBucklescriptBlock.__(0, [result1.value])
          : result1.tag==="PushWithSideEffects"
          ? CreateBucklescriptBlock.__(1, [result1.value[0], function (Arg12: any) {
            const result2 = result1.value[1]({state:Arg12[0], send:Arg12[1], handle:Arg12[2]});
            return result2
          }])
          : result1.tag==="Replace"
          ? CreateBucklescriptBlock.__(2, [result1.value])
          : result1.tag==="ReplaceWithSideEffects"
          ? CreateBucklescriptBlock.__(3, [result1.value[0], function (Arg13: any) {
            const result3 = result1.value[1]({state:Arg13[0], send:Arg13[1], handle:Arg13[2]});
            return result3
          }])
          : CreateBucklescriptBlock.__(4, [function (Arg14: any) {
            const result4 = result1.value({state:Arg14[0], send:Arg14[1], handle:Arg14[2]});
            return result4
          }])
        : $$toRE443305185[result1]
    }, function (Arg15: any) {
      const result5 = result.render({state:Arg15[0], send:Arg15[1], handle:Arg15[2]});
      return result5
    }, result.subscriptions]
}, jsProps.router, jsProps.children);
  }));

export const routerProgram: <action,state,view>(_1:{ readonly serializeState: ((_1:state) => string) }, _2:string) => RouterProgram_t<action,state,view> = function <action,state,view>(Arg1: any, Arg2: any) {
  const result = Curry._2(OolongBS.routerProgram, Arg1.serializeState, Arg2);
  return {debugName:result[0], serializeState:result[1], init:function (Arg11: any, Arg21: any, Arg3: any) {
      const result1 = Curry._3(result[2], Arg11, Arg21, Arg3);
      return result1
    }, fromRoute:function (Arg12: any, Arg22: any) {
      const result2 = Curry._2(result[3], Arg12, Arg22);
      return result2
    }, toRoute:function (Arg13: any, Arg23: any) {
      const result3 = Curry._2(result[4], Arg13, Arg23);
      return typeof(result3) === 'object'
        ? result3.tag===0
          ? {tag:"Push", value:result3[0]}
          : result3.tag===1
          ? {tag:"PushWithSideEffects", value:[result3.slice()[0], function (Arg14: any) {
            const result4 = result3.slice()[1]([Arg14.state, Arg14.send, Arg14.handle]);
            return result4
          }]}
          : result3.tag===2
          ? {tag:"Replace", value:result3[0]}
          : result3.tag===3
          ? {tag:"ReplaceWithSideEffects", value:[result3.slice()[0], function (Arg15: any) {
            const result5 = result3.slice()[1]([Arg15.state, Arg15.send, Arg15.handle]);
            return result5
          }]}
          : {tag:"PopWithSideEffects", value:function (Arg16: any) {
            const result6 = result3[0]([Arg16.state, Arg16.send, Arg16.handle]);
            return result6
          }}
        : $$toJS443305185[result3]
    }, render:function (Arg17: any) {
      const result7 = result[5]([Arg17.state, Arg17.send, Arg17.handle]);
      return result7
    }, subscriptions:result[6]}
};

export const run: <action,state,view>(_1:{ readonly router?: Oolong_Internals_Router_t }, _2:RouterProgram_t<action,state,view>, _3:((_1:view) => void)) => void = function <action,state,view>(Arg1: any, Arg2: any, Arg3: any) {
  const result = Curry._3(OolongBS.run, Arg1.router, [Arg2.debugName, Arg2.serializeState, Arg2.init, Arg2.fromRoute, function (Arg11: any, Arg21: any) {
      const result1 = Arg2.toRoute(Arg11, Arg21);
      return typeof(result1) === 'object'
        ? result1.tag==="Push"
          ? CreateBucklescriptBlock.__(0, [result1.value])
          : result1.tag==="PushWithSideEffects"
          ? CreateBucklescriptBlock.__(1, [result1.value[0], function (Arg12: any) {
            const result2 = result1.value[1]({state:Arg12[0], send:Arg12[1], handle:Arg12[2]});
            return result2
          }])
          : result1.tag==="Replace"
          ? CreateBucklescriptBlock.__(2, [result1.value])
          : result1.tag==="ReplaceWithSideEffects"
          ? CreateBucklescriptBlock.__(3, [result1.value[0], function (Arg13: any) {
            const result3 = result1.value[1]({state:Arg13[0], send:Arg13[1], handle:Arg13[2]});
            return result3
          }])
          : CreateBucklescriptBlock.__(4, [function (Arg14: any) {
            const result4 = result1.value({state:Arg14[0], send:Arg14[1], handle:Arg14[2]});
            return result4
          }])
        : $$toRE443305185[result1]
    }, function (Arg15: any) {
      const result5 = Arg2.render({state:Arg15[0], send:Arg15[1], handle:Arg15[2]});
      return result5
    }, Arg2.subscriptions], Arg3);
  return result
};
