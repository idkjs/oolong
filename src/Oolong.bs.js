// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");
var Oolong_Internals = require("./Oolong_Internals.bs.js");

function makeSelf(send, getState) {
  return /* record */[
          /* state */Curry._1(getState, /* () */0),
          /* send */send,
          /* handle */(function (fn, data) {
              return Curry._2(fn, data, makeSelf(send, getState));
            })
        ];
}

function make(debugName) {
  return /* record */[
          /* debugName */debugName,
          /* initialState */(function () {
              return Pervasives.failwith("Must implement initialState method.");
            }),
          /* reducer */(function (_, _$1) {
              return Pervasives.failwith("Must implement reducer method.");
            }),
          /* render */(function () {
              return Pervasives.failwith("Must implement render method.");
            }),
          /* subscriptions */(function () {
              return /* [] */0;
            })
        ];
}

function run(program, callback) {
  var state = /* record */[/* contents */Curry._1(program[/* initialState */1], /* () */0)];
  var loopCounter = /* record */[/* contents */0];
  var getState = function () {
    return state[0];
  };
  var send = function (action) {
    loopCounter[0] = loopCounter[0] + 1 | 0;
    var previous = state[0];
    var update = Curry._2(program[/* reducer */2], action, previous);
    if (typeof update !== "number") {
      switch (update.tag | 0) {
        case 0 : 
            state[0] = update[0];
            break;
        case 1 : 
            state[0] = update[0];
            Curry._1(update[1], makeSelf(send, getState));
            break;
        case 2 : 
            Curry._1(update[0], makeSelf(send, getState));
            break;
        
      }
    }
    var next = state[0];
    loopCounter[0] = loopCounter[0] - 1 | 0;
    if (loopCounter[0] === 0 && next !== previous) {
      Curry._1(callback, Curry._1(program[/* render */3], makeSelf(send, getState)));
      return /* () */0;
    } else {
      return 0;
    }
  };
  Belt_List.forEach(Curry._1(program[/* subscriptions */4], state[0]), (function (subscription) {
          return Curry._1(subscription, makeSelf(send, getState));
        }));
  Curry._1(callback, Curry._1(program[/* render */3], makeSelf(send, getState)));
  return /* () */0;
}

var BasicProgram = /* module */[
  /* make */make,
  /* run */run
];

function make$1(serializeState, debugName) {
  return /* record */[
          /* debugName */debugName,
          /* serializeState */serializeState,
          /* init */(function (_, _$1, _$2) {
              return Pervasives.failwith("Must implement init method.");
            }),
          /* fromRoute */(function (_, _$1) {
              return Pervasives.failwith("Must implement fromRoute method.");
            }),
          /* toRoute */(function (_, _$1) {
              return Pervasives.failwith("Must implement reducer method.");
            }),
          /* render */(function () {
              return Pervasives.failwith("Must implement render method.");
            }),
          /* subscriptions */(function () {
              return /* [] */0;
            })
        ];
}

function getUserState(param) {
  return param[0];
}

function getUserSelf(ourSelf) {
  var send = function (action) {
    return Curry._1(ourSelf[/* send */1], /* UserAction */Block.__(0, [action]));
  };
  var getState = function () {
    return ourSelf[/* state */0][0];
  };
  return makeSelf(send, getState);
}

function wrapSideEffect(userSideEffect, ourSelf) {
  return Curry._1(userSideEffect, getUserSelf(ourSelf));
}

function emptySideEffect() {
  return /* () */0;
}

function run$1(router, program) {
  var router$1 = router !== undefined ? Js_primitive.valFromOption(router) : Oolong_Internals.Router[/* hash */4](/* () */0);
  var ourProgram = make(program[/* debugName */0] + "_Internal");
  var initialRoute = Oolong_Internals.Route[/* fromLocation */4](Oolong_Internals.Router[/* getCurrent */6](router$1));
  var initialSideEffect = /* record */[/* contents */emptySideEffect];
  var initialState = function () {
    var routeState = Curry._3(program[/* init */2], initialRoute[/* path */0], initialRoute[/* search */1], initialRoute[/* hash */2]);
    if (routeState.tag) {
      var sideEffect = routeState[1];
      initialSideEffect[0] = (function (param) {
          return Curry._1(sideEffect, getUserSelf(param));
        });
      return /* UserState */[routeState[0]];
    } else {
      return /* UserState */[routeState[0]];
    }
  };
  var reducer = function (ourAction, ourState) {
    var state = ourState[0];
    if (ourAction.tag) {
      var routerAction = ourAction[0];
      var previous = state;
      var routeState = Curry._2(program[/* fromRoute */3], routerAction, previous);
      if (routeState.tag) {
        var sideEffect = routeState[1];
        return /* UpdateWithSideEffects */Block.__(1, [
                  /* UserState */[routeState[0]],
                  (function (param) {
                      return Curry._1(sideEffect, getUserSelf(param));
                    })
                ]);
      } else {
        return /* Update */Block.__(0, [/* UserState */[routeState[0]]]);
      }
    } else {
      var action = ourAction[0];
      var previous$1 = state;
      var userUpdate = Curry._2(program[/* toRoute */4], action, previous$1);
      if (typeof userUpdate === "number") {
        router$1.goBack();
        return /* NoUpdate */0;
      } else {
        switch (userUpdate.tag | 0) {
          case 0 : 
              var next = userUpdate[0];
              Oolong_Internals.Router[/* pushAtomic */7](router$1, Curry._1(program[/* serializeState */1], next));
              return /* Update */Block.__(0, [/* UserState */[next]]);
          case 1 : 
              var sideEffect$1 = userUpdate[1];
              var next$1 = userUpdate[0];
              Oolong_Internals.Router[/* pushAtomic */7](router$1, Curry._1(program[/* serializeState */1], next$1));
              return /* UpdateWithSideEffects */Block.__(1, [
                        /* UserState */[next$1],
                        (function (param) {
                            return Curry._1(sideEffect$1, getUserSelf(param));
                          })
                      ]);
          case 2 : 
              var next$2 = userUpdate[0];
              Oolong_Internals.Router[/* replaceAtomic */8](router$1, Curry._1(program[/* serializeState */1], next$2));
              return /* Update */Block.__(0, [/* UserState */[next$2]]);
          case 3 : 
              var sideEffect$2 = userUpdate[1];
              var next$3 = userUpdate[0];
              Oolong_Internals.Router[/* replaceAtomic */8](router$1, Curry._1(program[/* serializeState */1], next$3));
              return /* UpdateWithSideEffects */Block.__(1, [
                        /* UserState */[next$3],
                        (function (param) {
                            return Curry._1(sideEffect$2, getUserSelf(param));
                          })
                      ]);
          case 4 : 
              var sideEffect$3 = userUpdate[0];
              router$1.goBack();
              return /* SideEffects */Block.__(2, [(function (param) {
                            return Curry._1(sideEffect$3, getUserSelf(param));
                          })]);
          
        }
      }
    }
  };
  var render = function (ourSelf) {
    return Curry._1(program[/* render */5], getUserSelf(ourSelf));
  };
  var subscriptions = function (wrappedState) {
    var historySubscription = function (self) {
      Oolong_Internals.Router[/* listen */3]((function (routerAction) {
              return Curry._1(self[/* send */1], /* RouteChanged */Block.__(1, [routerAction]));
            }), router$1);
      return /* () */0;
    };
    var userState = wrappedState[0];
    var subs = Belt_List.map(Curry._1(program[/* subscriptions */6], userState), wrapSideEffect);
    return /* :: */[
            historySubscription,
            /* :: */[
              initialSideEffect[0],
              subs
            ]
          ];
  };
  var partial_arg_000 = /* debugName */ourProgram[/* debugName */0];
  var partial_arg = /* record */[
    partial_arg_000,
    /* initialState */initialState,
    /* reducer */reducer,
    /* render */render,
    /* subscriptions */subscriptions
  ];
  return (function (param) {
      return run(partial_arg, param);
    });
}

var RouterProgram = /* module */[
  /* make */make$1,
  /* getUserState */getUserState,
  /* getUserSelf */getUserSelf,
  /* wrapSideEffect */wrapSideEffect,
  /* emptySideEffect */emptySideEffect,
  /* run */run$1
];

var component = ReasonReact.reducerComponent("ApplicationContainer");

function make$2(program, router, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */(function (self) {
              return run$1(router, Curry._1(program, /* () */0))((function (view) {
                            return Curry._1(self[/* send */3], /* Render */[view]);
                          }));
            }),
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              return React.createElement(React.Fragment, undefined, self[/* state */1]);
            }),
          /* initialState */(function () {
              return null;
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, _) {
              return /* Update */Block.__(0, [action[0]]);
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

var ReactProgram = /* module */[
  /* component */component,
  /* make */make$2
];

var Url = 0;

var Route = 0;

var Router = 0;

var RouterAction = 0;

var routerProgram = make$1;

exports.makeSelf = makeSelf;
exports.Url = Url;
exports.Route = Route;
exports.Router = Router;
exports.RouterAction = RouterAction;
exports.BasicProgram = BasicProgram;
exports.RouterProgram = RouterProgram;
exports.ReactProgram = ReactProgram;
exports.routerProgram = routerProgram;
exports.run = run$1;
/* component Not a pure module */
