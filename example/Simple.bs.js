// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Oolong = require("../src/Oolong.bs.js");
var ReactDOMRe = require("reason-react/src/legacy/ReactDOMRe.bs.js");
var Caml_format = require("bs-platform/lib/js/caml_format.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Oolong_Internals = require("../src/Oolong_Internals.bs.js");

function serializeState(state) {
  return Oolong_Internals.Url.make({
              hd: String(state.counter),
              tl: /* [] */0
            }, "", "");
}

var program = Oolong.routerProgram(serializeState, "CounterExample");

var counterProgram_debugName = program.debugName;

var counterProgram_serializeState = program.serializeState;

function counterProgram_init(path, _search, _hash) {
  if (path && !path.tl) {
    return {
            TAG: /* State */0,
            _0: {
              counter: Caml_format.caml_int_of_string(path.hd)
            }
          };
  } else {
    return {
            TAG: /* State */0,
            _0: {
              counter: 0
            }
          };
  }
}

function counterProgram_fromRoute(routeAction, _state) {
  var match = routeAction._0;
  if (match && !match.tl) {
    return {
            TAG: /* State */0,
            _0: {
              counter: Caml_format.caml_int_of_string(match.hd)
            }
          };
  } else {
    return {
            TAG: /* State */0,
            _0: {
              counter: 0
            }
          };
  }
}

function counterProgram_toRoute(action, state) {
  if (typeof action === "number") {
    if (action !== 0) {
      return {
              TAG: /* Push */0,
              _0: {
                counter: state.counter - 1 | 0
              }
            };
    } else {
      return {
              TAG: /* Push */0,
              _0: {
                counter: state.counter + 1 | 0
              }
            };
    }
  } else {
    return {
            TAG: /* Replace */2,
            _0: {
              counter: (action._0 << 1)
            }
          };
  }
}

function counterProgram_render(self) {
  return React.createElement("div", undefined, String(self.state.counter), React.createElement("button", {
                  onClick: (function (param) {
                      return Curry._1(self.send, /* Increment */0);
                    })
                }, "Increment"), React.createElement("button", {
                  onClick: (function (param) {
                      return Curry._1(self.send, /* Decrement */1);
                    })
                }, "Decrement"), React.createElement("button", {
                  onClick: (function (param) {
                      return Curry._1(self.send, /* Double */{
                                  _0: self.state.counter
                                });
                    })
                }, "Double"));
}

var counterProgram_subscriptions = program.subscriptions;

var counterProgram = {
  debugName: counterProgram_debugName,
  serializeState: counterProgram_serializeState,
  init: counterProgram_init,
  fromRoute: counterProgram_fromRoute,
  toRoute: counterProgram_toRoute,
  render: counterProgram_render,
  subscriptions: counterProgram_subscriptions
};

((function() {
    var app = document.createElement("div");
    app.id = "app";
    document.body.appendChild(app);
  }()));

Oolong.run(Caml_option.some(Oolong_Internals.Router.hash(undefined)), counterProgram)(function (view) {
      return ReactDOMRe.renderToElementWithId(view, "app");
    });

exports.serializeState = serializeState;
exports.program = program;
exports.counterProgram = counterProgram;
/* program Not a pure module */
