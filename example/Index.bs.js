// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Oolong = require("../src/Oolong.bs.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var Belt_Debug = require("bs-platform/lib/js/belt_Debug.js");
var ReactDOMRe = require("reason-react/src/ReactDOMRe.js");
var Caml_format = require("bs-platform/lib/js/caml_format.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");
var Oolong_Route = require("../src/Oolong_Route.bs.js");
var Oolong_Router = require("../src/Oolong_Router.bs.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");

Belt_Debug.setupChromeDebugger(/* () */0);

var component = ReasonReact.statelessComponent("StringElement");

function make(children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              if (children.length !== 1) {
                throw [
                      Caml_builtin_exceptions.match_failure,
                      /* tuple */[
                        "Index.re",
                        10,
                        10
                      ]
                    ];
              } else {
                return children[0];
              }
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

var S = /* module */[
  /* component */component,
  /* make */make
];

function app() {
  var program = Oolong.routerProgram("CounterApp");
  var $$double = function (self) {
    console.log("init side effect");
    return Curry._1(self[/* send */1], /* Double */[self[/* state */0][/* counter */0]]);
  };
  return /* record */[
          /* debug */program[/* debug */0],
          /* fromRoute */(function (routeAction, route) {
              if (routeAction !== 0) {
                var match = route[/* path */0];
                if (match && match[0] === "") {
                  var match$1 = match[1];
                  if (match$1 && !match$1[1]) {
                    return /* UpdateWithSideEffects */Block.__(1, [
                              /* record */[/* counter */Caml_format.caml_int_of_string(match$1[0])],
                              $$double
                            ]);
                  } else {
                    return /* NoUpdate */0;
                  }
                } else {
                  return /* NoUpdate */0;
                }
              } else {
                var match$2 = route[/* path */0];
                if (match$2 && match$2[0] === "") {
                  var match$3 = match$2[1];
                  if (match$3 && !match$3[1]) {
                    return /* Update */Block.__(0, [/* record */[/* counter */Caml_format.caml_int_of_string(match$3[0])]]);
                  } else {
                    return /* Update */Block.__(0, [/* record */[/* counter */0]]);
                  }
                } else {
                  return /* Update */Block.__(0, [/* record */[/* counter */0]]);
                }
              }
            }),
          /* toRoute */(function (param) {
              var next = param[/* next */1];
              var previous = param[/* previous */0];
              console.log("toRoute", previous, next);
              if (Caml_obj.caml_equal(previous, next)) {
                return /* NoTransition */1;
              } else {
                return /* Push */Block.__(0, [Oolong_Route.make(/* :: */[
                                "",
                                /* :: */[
                                  String(next[/* counter */0]),
                                  /* [] */0
                                ]
                              ], "", "")]);
              }
            }),
          /* update */(function (action, state) {
              if (typeof action === "number") {
                switch (action) {
                  case 0 : 
                      console.log("increment");
                      return /* UpdateWithSideEffects */Block.__(1, [
                                /* record */[/* counter */state[/* counter */0] + 1 | 0],
                                $$double
                              ]);
                  case 1 : 
                      console.log("decrement");
                      return /* Update */Block.__(0, [/* record */[/* counter */state[/* counter */0] - 1 | 0]]);
                  case 2 : 
                      console.log("nothing");
                      return /* NoUpdate */0;
                  
                }
              } else {
                console.log("double");
                return /* Update */Block.__(0, [/* record */[/* counter */(action[0] << 1)]]);
              }
            }),
          /* view */(function (self) {
              return React.createElement("div", undefined, ReasonReact.element(undefined, undefined, make(/* array */[String(self[/* state */0][/* counter */0])])), React.createElement("button", {
                              onClick: (function () {
                                  return Curry._1(self[/* send */1], /* Increment */0);
                                })
                            }, ReasonReact.element(undefined, undefined, make(/* array */["Increment"]))), React.createElement("button", {
                              onClick: (function () {
                                  return Curry._1(self[/* send */1], /* Decrement */1);
                                })
                            }, ReasonReact.element(undefined, undefined, make(/* array */["Decrement"]))), React.createElement("button", {
                              onClick: (function () {
                                  return Curry._1(self[/* send */1], /* Nothing */2);
                                })
                            }, ReasonReact.element(undefined, undefined, make(/* array */["Do Nothing"]))));
            })
        ];
}

((
  function() {
    var app = document.createElement("div");
    app.id = "app";
    document.body.appendChild(app);
  }()
));

Oolong.startup(Js_primitive.some(Oolong_Router.hash(/* () */0)), app(/* () */0), (function (view) {
        return ReactDOMRe.renderToElementWithId(view, "app");
      }));

exports.S = S;
exports.app = app;
/*  Not a pure module */
